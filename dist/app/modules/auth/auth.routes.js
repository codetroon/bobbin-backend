"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.AuthRoutes = void 0;
const express_1 = __importDefault(require("express"));
const userRoles_1 = require("../../../enums/userRoles");
const auth_1 = __importDefault(require("../../middlewares/auth"));
const validateRequest_1 = __importDefault(require("../../middlewares/validateRequest"));
const auth_controller_1 = require("./auth.controller");
const auth_validation_1 = require("./auth.validation");
const router = express_1.default.Router();
router.post("/register", (0, validateRequest_1.default)(auth_validation_1.AuthValidation.registerUserSchema), auth_controller_1.AuthController.registerUser);
router.post("/login", (0, validateRequest_1.default)(auth_validation_1.AuthValidation.loginValidationSchema), auth_controller_1.AuthController.loginUser);
router.post("/refresh-token", auth_controller_1.AuthController.refreshToken);
router.post("/change-password", (0, auth_1.default)(userRoles_1.USER_ROLES.user, userRoles_1.USER_ROLES.admin, userRoles_1.USER_ROLES.super_admin, userRoles_1.USER_ROLES.seller, userRoles_1.USER_ROLES.verifier, userRoles_1.USER_ROLES.delivery_man), (0, validateRequest_1.default)(auth_validation_1.AuthValidation.changePasswordValidationSchema), auth_controller_1.AuthController.changePassword);
router.post("/forget-password", (0, auth_1.default)(userRoles_1.USER_ROLES.user, userRoles_1.USER_ROLES.admin, userRoles_1.USER_ROLES.super_admin, userRoles_1.USER_ROLES.seller, userRoles_1.USER_ROLES.verifier, userRoles_1.USER_ROLES.delivery_man), auth_controller_1.AuthController.forgetPassword);
router.post("/reset-password", (0, auth_1.default)(userRoles_1.USER_ROLES.user, userRoles_1.USER_ROLES.admin, userRoles_1.USER_ROLES.super_admin, userRoles_1.USER_ROLES.seller, userRoles_1.USER_ROLES.verifier, userRoles_1.USER_ROLES.delivery_man), auth_controller_1.AuthController.resetPassword);
exports.AuthRoutes = router;
