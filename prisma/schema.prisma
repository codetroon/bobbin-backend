// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  phone    String?
  role     Role    @default(super_admin)
}

model Product {
  id          String   @id @default(uuid())
  name        String
  productCode String   @unique
  description String?
  price       Float
  details     String?
  materials   String[]
  colors      String[]
  images      String[]
  categoryId  String
  category    Category @relation(fields: [categoryId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orderId     String?
  Order       Order[]
  Size        Size[]
}

model Size {
  id        String   @id @default(uuid())
  name      String
  stock     Int
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id        String    @id @default(uuid())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Product   Product[]
}

model Order {
  id            String   @id @default(uuid())
  customerName  String
  address       String
  contactNumber String
  productId     String
  products      Product  @relation(fields: [productId], references: [id])
  totalPrice    Float
  status        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum Role {
  super_admin
}
